[project]
name = "amira-letter-scoring"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12,<3.14"
dependencies = [
  "polars>=0.20.30",
  "loguru>=0.7.2",
  "rich>=14.1.0",
  "pydantic>=2.11.7",
  "aioboto3>=15.1.0",
  "botocore>=1.39.11",
  "numpy>=2.3.2",
  "gql>=4.0.0",
  "pyarrow>=21.0.0",
  "typer>=0.16.1",
  "gevent>=25.5.1",
  "geventhttpclient>=2.3.4",
  "requests-toolbelt>=1.0.0",
  "pydub>=0.25.1",
  "soundfile>=0.13.1",
  "scipy>=1.16.1",
  "line-profiler>=5.0.0",
  "tenacity>=9.0.0",
  "safetensors>=0.4.0",
  "torch>=2.8.0",
  "torchaudio>=2.8.0",
  "transformers>=4.55.3",
  "psutil>=6.1.1",
  "orjson>=3.11.3",
  "toolz>=1.0.0",
  "pandas>=2.3.2",
  "fuzzywuzzy>=0.18.0",
  "epitran>=1.26.0",
  "edit-distance>=1.0.6",
  "jellyfish>=1.2.0",
  "metaphone>=0.6",
  "bio>=1.8.0",
]

[project.optional-dependencies]
gpu = [
  "tritonclient>=2.59.0",
]

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "ruff>=0.12.10",
    "maturin>=1.9.3",
    "types-pyyaml>=6.0.12.20250822",
    "boto3-stubs>=1.40.21",
    "types-aioboto3>=15.1.0",
    "scipy-stubs>=1.16.1.1",
    "types-requests>=2.32.4.20250809",
    "types-python-dateutil>=2.9.0.20250822",
    "pytest>=8.4.2",
    "jsonschema>=4.25.1",
    "pytest-asyncio>=1.1.0",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E","F","I","UP","PT","RUF"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.12"
warn_unused_ignores = true
warn_redundant_casts = true
disallow_untyped_defs = true
namespace_packages = true
explicit_package_bases = true
ignore_missing_imports = true
follow_imports = "skip"
plugins = []

exclude = [
    "cdk\\.out/.*",
    "node_modules/.*",
    "target/.*"
]

[[tool.mypy.overrides]]
module = "transformers.*"
ignore_missing_imports = true
follow_imports = "skip"

[[tool.mypy.overrides]]
# Ensure pydantic types are visible; otherwise BaseModel becomes Any.
module = [
    "pydantic",
    "pydantic.*",
]
ignore_missing_imports = false
follow_imports = "normal"

[[tool.mypy.overrides]]
# Make pytest decorators typed to avoid "untyped decorator" in tests.
module = [
    "pytest",
    "pytest.*",
]
ignore_missing_imports = false
follow_imports = "normal"

[[tool.mypy.overrides]]
# Use proper typing for scientific stack used in code/tests.
module = [
    "numpy",
    "numpy.*",
    "scipy",
    "scipy.*",
    "torch",
    "torch.*",
    "torchaudio",
    "torchaudio.*",
]
ignore_missing_imports = false
follow_imports = "normal"

[[tool.mypy.overrides]]
# Tests often use untyped decorators; allow them.
module = [
    "tests.*",
]
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
# Suppress untyped import warnings for torchaudio which lacks py.typed
module = [
    "torchaudio",
    "torchaudio.*",
]
disable_error_code = ["import-untyped"]

[[tool.mypy.overrides]]
# Typer decorators should be typed for CLI
module = [
    "typer",
    "typer.*",
]
ignore_missing_imports = false
follow_imports = "normal"

[[tool.mypy.overrides]]
# Suppress import-untyped in benchmark which imports torchaudio
module = [
    "benchmark_optimizations",
]
disable_error_code = ["import-untyped"]

[[tool.mypy.overrides]]
# Suppress import-untyped for utils.audio which imports torchaudio
module = [
    "utils.audio",
]
disable_error_code = ["import-untyped"]

[tool.pyrefly]
project-excludes = [
    "**/cdk.out/**/*",
    "**/node_modules/**/*",
    "**/target/**/*",
]
python-version = "3.12.0"
ignore-missing-imports = [
    "transformers.*",
    "*",
]
