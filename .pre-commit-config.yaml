repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.11
    hooks:
      - id: ruff
        # Enable auto-fix locally for convenience
        args: ["--fix"]
      - id: ruff-format
        # Enable auto-formatting
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args: ["--remove-all-unused-imports", "--remove-unused-variables", "--in-place"]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        additional_dependencies:
          - pydantic>=2
          - types-requests
          - boto3-stubs
          - types-PyYAML
          - types-python-dateutil
        files: "^(src/|utils/|infra/|main.py)"
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: end-of-file-fixer
        exclude: '^(cdk/dist/.*|my_asr_aligner/target/.*)'
      - id: trailing-whitespace
        exclude: '^(cdk/dist/.*|my_asr_aligner/target/.*)'

  # TypeScript/CDK checks
  - repo: local
    hooks:
      - id: cdk-typescript-build
        name: CDK TypeScript Build
        entry: bash -c 'cd cdk && npm run build'
        language: system
        files: '^cdk/.*\.(ts|js|json)$'
        pass_filenames: false

      - id: cdk-synth-check
        name: CDK Synth Validation
        entry: bash -c 'cd cdk && npx cdk synth --quiet > /dev/null'
        language: system
        files: '^cdk/lib/.*\.ts$'
        pass_filenames: false

      - id: eslint-typescript
        name: ESLint TypeScript
        entry: bash -c 'cd cdk && npm run lint'
        language: system
        files: '^cdk/.*\.ts$'
        pass_filenames: false

  # Rust checks
  - repo: local
    hooks:
      - id: rust-fmt
        name: Rust Format Check
        entry: bash -c 'cd my_asr_aligner && cargo fmt --check'
        language: system
        files: '^my_asr_aligner/src/.*\.rs$|^my_asr_aligner/benches/.*\.rs$'
        pass_filenames: false

      - id: rust-clippy
        name: Rust Clippy Linting
        entry: bash -c 'cd my_asr_aligner && cargo clippy --lib --bins -- -D warnings'
        language: system
        files: '^my_asr_aligner/(src|benches)/.*\.rs$'
        exclude: '^my_asr_aligner/target/.*'
        pass_filenames: false
        always_run: false

      - id: rust-check
        name: Rust Build Check
        entry: bash -c 'cd my_asr_aligner && cargo check --lib --quiet'
        language: system
        files: '^my_asr_aligner/(src|benches)/.*\.rs$'
        exclude: '^my_asr_aligner/target/.*'
        pass_filenames: false
        always_run: false
