# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT! TODO where is the source file?
# mypy: ignore-errors
import grpc

import amira_fe.blank_detect_pb2 as blank__detect__pb2


class BlankDetectStub:
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel: grpc.Channel) -> None:
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.blankdetect = channel.unary_unary(
            "/BlankDetect/blankdetect",
            request_serializer=blank__detect__pb2.BlankDetectMessage.SerializeToString,
            response_deserializer=blank__detect__pb2.Blanks.FromString,
        )


class BlankDetectServicer:
    # missing associated documentation comment in .proto file
    pass

    def blankdetect(self, request, context):
        # missing associated documentation comment in .proto file
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_BlankDetectServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "blankdetect": grpc.unary_unary_rpc_method_handler(
            servicer.blankdetect,
            request_deserializer=blank__detect__pb2.BlankDetectMessage.FromString,
            response_serializer=blank__detect__pb2.Blanks.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("BlankDetect", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
