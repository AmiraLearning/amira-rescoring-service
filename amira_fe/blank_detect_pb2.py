# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blank_detect.proto TODO where is the source file?

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode("latin1"))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
    name="blank_detect.proto",
    package="",
    syntax="proto3",
    serialized_options=None,
    serialized_pb=_b(
        '\n\x12\x62lank_detect.proto"6\n\x12\x42lankDetectMessage\x12\x10\n\x08\x65xpected\x18\x01 \x01(\t\x12\x0e\n\x06\x61\x63tual\x18\x02 \x01(\t"9\n\x06\x42lanks\x12\r\n\x05value\x18\x01 \x01(\t\x12\x11\n\talignment\x18\x02 \x01(\t\x12\r\n\x05\x65rror\x18\x03 \x01(\t2<\n\x0b\x42lankDetect\x12-\n\x0b\x62lankdetect\x12\x13.BlankDetectMessage\x1a\x07.Blanks"\x00\x62\x06proto3'
    ),
)


_BLANKDETECTMESSAGE = _descriptor.Descriptor(
    name="BlankDetectMessage",
    full_name="BlankDetectMessage",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="expected",
            full_name="BlankDetectMessage.expected",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="actual",
            full_name="BlankDetectMessage.actual",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=22,
    serialized_end=76,
)


_BLANKS = _descriptor.Descriptor(
    name="Blanks",
    full_name="Blanks",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="value",
            full_name="Blanks.value",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="alignment",
            full_name="Blanks.alignment",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="error",
            full_name="Blanks.error",
            index=2,
            number=3,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=78,
    serialized_end=135,
)

DESCRIPTOR.message_types_by_name["BlankDetectMessage"] = _BLANKDETECTMESSAGE
DESCRIPTOR.message_types_by_name["Blanks"] = _BLANKS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BlankDetectMessage = _reflection.GeneratedProtocolMessageType(
    "BlankDetectMessage",
    (_message.Message,),
    {
        "DESCRIPTOR": _BLANKDETECTMESSAGE,
        "__module__": "blank_detect_pb2",
        # @@protoc_insertion_point(class_scope:BlankDetectMessage)
    },
)
_sym_db.RegisterMessage(BlankDetectMessage)

Blanks = _reflection.GeneratedProtocolMessageType(
    "Blanks",
    (_message.Message,),
    {
        "DESCRIPTOR": _BLANKS,
        "__module__": "blank_detect_pb2",
        # @@protoc_insertion_point(class_scope:Blanks)
    },
)
_sym_db.RegisterMessage(Blanks)


_BLANKDETECT = _descriptor.ServiceDescriptor(
    name="BlankDetect",
    full_name="BlankDetect",
    file=DESCRIPTOR,
    index=0,
    serialized_options=None,
    serialized_start=137,
    serialized_end=197,
    methods=[
        _descriptor.MethodDescriptor(
            name="blankdetect",
            full_name="BlankDetect.blankdetect",
            index=0,
            containing_service=None,
            input_type=_BLANKDETECTMESSAGE,
            output_type=_BLANKS,
            serialized_options=None,
        ),
    ],
)
_sym_db.RegisterServiceDescriptor(_BLANKDETECT)

DESCRIPTOR.services_by_name["BlankDetect"] = _BLANKDETECT

# @@protoc_insertion_point(module_scope)
